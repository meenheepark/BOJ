#include <iostream>
using namespace std;
/*
사이트 : 백준
문제번호 : 2193
분류 : 다이나믹프로그래밍
설명 : 이친수
점화식 : d[l][0] = d[l-1][0]+d[l-1][1]/d[l][1] = d[l-1][0]
이진수
이친수는 0으로 시작하지 않는다.
이친수에서는 1이 두 번 연속으로 나타나지 않는다. 즉, 11을 부분 문자열로 갖지 않는다.
-마지막 수 저장해야하고, 자릿수 저장해야함 자릿수를 길이라고 생각
*/
long long d[100][2]; // 열은 마지막 수 0또는 1 long long 해야함  90 하면 너무 큼

int main() {
	int n;
	cin >> n;
	d[1][1] = 1; // 길이가 1인경우는 그냥 다 초기화 해야함
	d[1][0] = 0;
	for (int i = 2; i <= n; i++) {
		d[i][0] = d[i - 1][1] + d[i - 1][0];
		d[i][1] = d[i - 1][0];
	}
	cout << d[n][1]+d[n][0];
}